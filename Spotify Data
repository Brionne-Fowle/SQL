# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.
#Next, I explored the data using the following SQL.


#Who was the top 5 artists based on popularity?

SELECT track_name, artist_name, popularity
FROM spotifydata
ORDER BY popularity desc
LIMIT 5

#What is the average danceability by artist and track name?

SELECT artist_name, track_name, avg(danceability)
FROM SpotifyData
GROUP BY artist_name, track_name
ORDER BY avg(danceability) desc

#Which artist released the shortest song?

SELECT artist_name, track_name, duration_ms
FROM Spotifydata
ORDER BY duration_ms asc
LIMIT 1

#What is the average energy rating for the 10 most popular songs? 

SELECT artist_name, track_name, popularity, avg(energy)
FROM SpotifyData
GROUP BY artist_name, track_name
ORDER BY popularity desc
LIMIT 10


#Are there any artists who have more than 1 song in the top 50? 

SELECT artist_name, COUNT(track_id) AS num_songs_in_top_50
FROM Spotifydata
GROUP BY artist_name
HAVING COUNT(track_id) > 1
ORDER BY num_songs_in_top_50 desc
